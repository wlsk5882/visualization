tract_extracted<-readRDS("tract_extracted.Rda")
# <- readRDS("data/counties.rds")
newColnames <- c("X", "GIDTR", "State", "State_name", "County", "County_name", "Tract", "Income", "Med_House_val", "ReturnRate", "pct_Males", "pct_Pop_5_17", "pct_Pop_18_24","pct_Pop_25_44", "pct_Pop_45_64", "pct_Pop_65plus", "pct_Hispanic", "pct_NH_White_alone", "pct_NH_Blk_alone", "pct_Not_HS_Grad",  "pct_College", "pct_Prs_Blw_Pov_Lev", "pct_Diff_HU_1yr_Ago", "pct_MrdCple_HHD", "pct_Female_No_HB", "pct_Sngl_Prns_HHD", "avg_Tot_Prns_in_HHD",  "pct_Rel_Under_6", "pct_Vacant_Units", "pct_Renter_Occp_HU", "pct_Single_Unit", "Population", "LAND_AREA", "density")
colnames(tract_extracted) <- newColnames
head(tract_extracted)
saveRDS(tract_extracted,file="tract_newLabel.Rda")
tract<-readRDS("tract_newLabel.Rda")
colnames(tract)
data<- readRDS("tract_newLabel.Rda")
data
colnames(tract)
popByState <-as.data.frame(tapply(data$Population, State_name, sum, na.rm=TRUE))
popByState
names(popByState)
rownames(popByState)
popByState$state_name<-rownames(popByState)
colnames(popByState) <- c("population","state_name")
colnames(data)
colnames(popByState)
popByState
saveRDS(popByState,"state_pop.Rda")
data<- readRDS("data/tract_newLabel.Rda")
readRDS("data/state_pop.Rda")
state_pop<-readRDS("data/state_pop.Rda")
tract<- readRDS("data/tract_newLabel.Rda")
tract<- readRDS("data/tract_newLabel.Rda")
state_pop<-readRDS("data/state_pop.Rda")
View(state_pop)
rm(tract_extracted)
rm(tract.extracted)
state
rm(data)
rm(popByState)
rm(newColnames)
rm(state_name)
rm(state)
state_name = levels(tract$State_name)
state_name
indir = "shapeFiles/USA_adm1"
indir = "data/shapeFiles/USA_adm1"
tractSDF = readOGR(indir, "USA_adm1")
plot(tractSDF)
summary(tractSDF@data)
ReturnRate <-as.data.frame(tapply(tract$ReturnRate, tract$State_name,median, na.rm=TRUE))
colnames(ReturnRate)<- "ReturnRate"
state_name<-rownames(ReturnRate)
state <- data.frame(state_name,ReturnRate)
state_rRate <- data.frame(state_name,ReturnRate)
state_rRate
state <- merge(state_rRate,state_pop, by = state_name, all=TRUE)
state <- merge(state_rRate,state_pop, by = "state_name", all=TRUE)
state
saveRDS(state, "data/state.Rda")
tractSDF@data<- merge(tractSDF@data, state, by.x="NAME_1",by.y="state_name", all.x=TRUE)
spplot(tractSDF,"ReturnRate", col=NA)
state<-readRDS("data/state.Rda")
class(tractSDF)
colnames(state)
qplot( x = state
, y = population
, data = state
, geom = "bar"
)
qplot( x = state_name
, y = population
, data = state
, geom = "bar"
)
population
state$population
state_pop <-as.numeric(tapply(tract$Population, State_name, sum, na.rm=TRUE))
state_pop
state_pop <-as.data.frame(tapply(tract$Population, State_name, sum, na.rm=TRUE))
state_pop$population <- as.numeric(state_pop$population)
as.numeric(state_pop$population)
state_pop <-as.data.frame(tapply(tract$Population, State_name, sum, na.rm=TRUE))
state_pop$state_name<-rownames(state_pop)
state_pop
tract <- readRDS("data/tract_newLabel.Rda")
state_pop <-as.data.frame(tapply(tract$Population, State_name, sum, na.rm=TRUE))
state_pop
state_pop$state_name<-rownames(state_pop)
state_pop
colnames(state_pop)
colnames(state_pop) <- c("population","state_name")
state_pop$population <- as.numeric(state_pop$population)
state_pop
saveRDS(state_pop,"data/state_pop.Rda")
state<-readRDS("data/state.Rda")
qplot( x = state_name
, y = population
#, data = state
, geom = "bar"
)
qplot( x = state_name
, y = population
, data = state
, geom = "bar"
)
qplot( x = state_name
, y = population
, data = state
, geom = "bar"
,stat = "bin"
)
qplot( x = state_name
, y = population
, data = state
, geom = "bar"
,stat = "identity"
)
hoveredSt<- "Alabama"
hoveredSt<- state$state_name[1]
hoveredSt
hoveredSt<- as.character(state$state_name[1])
hoveredSt
fills<- grep(hoveredSt,state$state_name)
fills
fills<- grep(hoveredSt,state$state_name)
hoveredSt<- as.character(state$state_name[3])
fills<- grep(hoveredSt,state$state_name)
hoveredIdx <- grep(hoveredSt,state$state_name)
fills <- length(state$statename)
length(state$statename)
fills <- rep("gray",length(state$statename))
fills
length(state$statename)
fills <- rep("gray",length(state$state_name))
fills
fills[hoveredIdx] <-"yellow"
fills
qplot( x = state_name
, y = population
, data = state
, geom = "bar"
, stat = "identity"
, fill = fills
)
selectedIdxSt<- as.character(state$state_name[3])
fills <- rep("gray",length(state$state_name))
selectedIdx <- grep(hoveredSt,state$state_name)
fills<- fills[selectedIdx] <-"yellow"
p1 <-qplot( x = state_name
, y = population
, data = state
, geom = "bar"
, stat = "identity"
, fill = fills
)+
scale_fill_manual(values = fills)+
theme(axis.text.x = element_text(angle=90)
, legend.text = element_blank())
p1
fills
fills <- rep("gray",length(state$state_name))
fills
selectedIdx <- grep(selectedIdxSt,state$state_name)
fills <- fills[selectedIdx] <-"yellow"
fills
grep(selectedIdxSt,state$state_name)
selectedIdx
fills <- rep("gray",length(state$state_name))
selectedIdx <- grep(selectedIdxSt,state$state_name)
fills[selectedIdx] <-"yellow"
fills
p1 <-qplot( x = state_name
, y = population
, data = state
, geom = "bar"
, stat = "identity"
, fill = fills
)+
scale_fill_manual(values = fills)+
theme(axis.text.x = element_text(angle=90)
, legend.text = element_blank())
p1
qplot( x = state_name
, y = population
, data = state
, geom = "bar"
, stat = "identity"
, fill = fills
)
qplot( x = state_name
, y = population
, data = state
, geom = "bar"
, stat = "identity"
, fill = fills
)+
scale_fill_manual(values = fills)
fills
p1 <-qplot( x = state_name
, y = population
, data = state
, geom = "bar"
, stat = "identity"
#, fill = fills
)+
scale_fill_manual(values = fills)+
theme(axis.text.x = element_text(angle=90)
, legend.text = element_blank())
p1
p1 <-qplot( x = state_name
, y = population
, data = state
, geom = "bar"
, stat = "identity"
, fill = fills
)+
scale_fill_manual(values = fills)+
theme(axis.text.x = element_text(angle=90)
, legend.text = element_blank())
p1
p1 <-qplot( x = state_name
, y = population
, data = state
, geom = "bar"
, stat = "identity"
, fill = fills
)+
scale_fill_brewer(type = "qual")+
theme(axis.text.x = element_text(angle=90)
, legend.text = element_blank())
p1
p1 <-qplot( x = state_name
, y = population
, data = state
, geom = "bar"
, stat = "identity"
, fill = fills
)+
scale_fill_brewer(type = "qual")+
theme(axis.text.x = element_text(angle=90)
, legend = element_blank())
p1
p1 <-qplot( x = state_name
, y = population
, data = state
, geom = "bar"
, stat = "identity"
, fill = fills
)+
scale_fill_brewer(type = "qual")+
theme(axis.text.x = element_text(angle=90)
, legend.position="none")
p1
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
unique(state_name)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
str(tractSDF)
tractSDF = readOGR(indir, "USA_adm1")
tractSDF@data<- merge(tractSDF@data, state, by.x="NAME_1",by.y="state_name", all.x=TRUE)
shiny::runApp()
qplot(
x = Tract
,y = ReturnRate
, data = tract
, geom = point
)
qplot(
x = Tract
,y = ReturnRate
, data = tract
, geom = points
)
attach(tract)
x = Tract
x
qplot(
y = ReturnRate
, data = tract
, geom = points
)
qplot(tract$ReturnRate)
qplot(tract$ReturnRate
,cut=TRUE)
p2<- qplot(tract$ReturnRate)+geom_histogram(stat="bin")
plot(tract$ReturnRate)+geom_histogram(stat="bin")
qplot(tract$ReturnRate)+geom_histogram(stat="identity")
qplot(y=tract$ReturnRate)
qplot(tract$ReturnRate)
p2.1 <- qplot( y = ReturnRate
,data=tract
)
p2.1+geom_point(alpha = .05)
p2.1 <- qplot( y = ReturnRate
,data=tract
)
p2.1+geom_point(
aes(alpha = .05)
)
p2.1 <- qplot( y = ReturnRate
,data=tract
)
p2.1+geom_point(
aes(alpha = Tract)
)
p2.1 <- qplot( y = ReturnRate
,data=tract
)
p2.1+geom_point(
alpha=0.5
)
df <- data.frame(x = rnorm(5000), y = rnorm(5000))
h  <- ggplot(df, aes(x,y))
h + geom_point(alpha = 0.5)
p2.1 <- qplot( x=pct_Males
,y = ReturnRate
,data=tract
)
p2.1+geom_point(
alpha=0.5
)
p2.1 <- qplot( x=tract$pct_Males
,y = tract$ReturnRate
#,data=tract
)
p2.1+geom_point(
alpha=0.5
)
p2.1 <- qplot( x=tract$pct_Males
,y = tract$ReturnRate
#,data=tract
)
p2.1+geom_point(
alpha=0.01
)
State_name = tract$State_name[1]
p2.1<-  with(subset(tract, State_name==input$state)
, qplot( x=tract$pct_Males
,y = tract$ReturnRate
#,data=tract
)
)
a<- tract$State_name[1]
p2.1<-  with(subset(tract, State_name==a)
, qplot( x=tract$pct_Males
,y = tract$ReturnRate
#,data=tract
)
)
p2.1+geom_point(
alpha=0.01
)
p2.1<-  with(subset(tract, State_name==a)
, qplot( x=tract$pct_Pop_45_64
,y = tract$ReturnRate
#,data=tract
)
)
p2.1+geom_point(
alpha=0.01
)
p2.1<-  with(subset(tract, State_name==a)
, qplot( x=pct_Pop_45_64
,y = ReturnRate
,data=tract
,colour=County
)
)
p2.1+geom_point(
alpha=0.01
)
p2.1<-  with(subset(tract, State_name==a)
, qplot( x=pct_Pop_45_64
,y = ReturnRate
,data=tract
,colour=County_name
)
)
p2.1+geom_point(
alpha=0.01
)
p2.1<-  with(subset(tract, State_name==a)
, qplot( x=pct_Pop_45_64
,y = ReturnRate
,data=tract
,colour=County_name
)
)
p2.1+geom_point(
alpha=0.01
)+stat_smooth(geom-"smooth", na.rm = TRUE)
p2.1<-  with(subset(tract, State_name==a)
, qplot( x=pct_Pop_45_64
,y = ReturnRate
,data=tract
,colour=County_name
)
)
p2.1+geom_point(
alpha=0.01
)+stat_smooth(geom="smooth", na.rm = TRUE)
p2.1<-  with(subset(tract, State_name==a)
, qplot( x=pct_Pop_45_64
,y = ReturnRate
,data=tract
,colour=County_name
)
)
p2.1+geom_point(
alpha=0.01
)+stat_smooth()
vars<-c ("Income", "Med_House_val", "pct_Males", "pct_Pop_5_17","pct_Pop_18_24"
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
qplot(tract$ReturnRate)
shiny::runApp()
library(shiny)
library(ggplot2)
library(rgdal)
tract<- readRDS("data/tract_newLabel.Rda")
state<-readRDS("data/state.Rda")
indir = "data/shapeFiles/USA_adm1"
tractSDF = readOGR(indir, "USA_adm1")
tractSDF@data$NAME_1<-as.character(tractSDF@data$NAME_1)
p1.1<- qplot(tract$ReturnRate)
p1.1
a<- tract$State_name[1]
vars<-c("Income", "Med_House_val", "pct_Males", "pct_Pop_5_17","pct_Pop_18_24"
, "pct_Pop_25_44", "pct_Pop_45_64", "pct_Pop_65plus", "pct_Hispanic"
, "pct_NH_White_alone", "pct_NH_Blk_alone", "pct_Not_HS_Grad", "pct_College"
, "pct_Prs_Blw_Pov_Lev", "pct_Diff_HU_1yr_Ago", "pct_MrdCple_HHD"
, "pct_Female_No_HB", "pct_Sngl_Prns_HHD", "avg_Tot_Prns_in_HHD", "pct_Rel_Under_6"
, "pct_Vacant_Units", "pct_Renter_Occp_HU", "pct_Single_Unit", "Population", "LAND_AREA"
, "density" )
a<- tract$State_name[1]
colVar<-vars[1]
a
xVar <- vars[3]
p2.1<-  with(subset(tract, State_name==a)
, qplot( x= tract[,xvar]
,y = tract$ReturnRate
,colour=tract[,colVar]
)
)
p2.1+
geom_point(alpha=0.01)
p2.1<-  with(subset(tract, State_name==a)
, qplot( x= tract[,xVar]
,y = tract$ReturnRate
,colour=tract[,colVar]
)
)
p2.1+
geom_point(alpha=0.01)
p2.1<-  with(subset(tract, State_name==a)
, qplot( x= tract[,xVar]
,y = tract$ReturnRate
#,colour=tract[,colVar]
)
)
p2.1+
geom_point(alpha=0.01)
})
p2.1<-  with(subset(tract, State_name==a)
, qplot( x= tract[,xVar]
,y = tract$ReturnRate
,colour=tract[,colVar]
)
)
p2.1+
geom_point()
p2.1<-  with(subset(tract, State_name==a)
, qplot( x= tract[,xVar]
,y = tract$ReturnRate
#,colour=tract[,colVar]
)
)
p2.1+
geom_point()
p1 <-qplot( x = state_name
, y = population
, data = state
, geom = "bar"
, stat = "identity"
, fill = fills
)+
scale_fill_brewer(type = "qual")+
theme(axis.text.x = element_text(angle=90)
, legend.position="none")
p1
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('721P2_jinalee')
shiny::runApp()
